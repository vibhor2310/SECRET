
---------Memoization ->-------------


class Solution {
public:
    int f(int i,int j,vector<vector<int>>&dp){

        if(i==0&&j==0) return 1;
        if(i<0||j<0) return 0;

        if(dp[i][j]!=-1) return dp[i][j];
        int r = f(i-1,j,dp);
        int d = f(i,j-1,dp);



        return dp[i][j]=r+d;

    }
    int uniquePaths(int m, int n) {
        vector<vector<int>>dp(m+1,vector<int>(n+1,-1));
        return f(m-1,n-1,dp);
        
    }
};


-------------// Tabulation ->------------

class Solution {
public:
   
    int uniquePaths(int m, int n) {
        vector<vector<int>>dp(m+1,vector<int>(n+1,0));

        // dp[0][0]=1;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(i==0&&j==0){
                    dp[i][j]=1;
                }
                else{
                int r=0;
                int d=0;
                if(i>0){
                    d=dp[i-1][j];
                }
                if(j>0){
                    r=dp[i][j-1];
                }
                dp[i][j]=r+d;
                }

            }
        }

        return dp[m-1][n-1];
        
    }
};
